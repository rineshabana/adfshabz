{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EmployeeDataSet",
						"type": "DatasetReference"
					},
					"name": "EmplyeeData"
				},
				{
					"dataset": {
						"referenceName": "DeprtamentdataSet",
						"type": "DatasetReference"
					},
					"name": "Deptdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputdataSet",
						"type": "DatasetReference"
					},
					"name": "outputData",
					"rejectedDataLinkedService": {
						"referenceName": "LinkedService_StorageDemo",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "joinEmpDataDeptData"
				},
				{
					"name": "ModifyColumns1",
					"description": "Autogenerated by data preview actions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          name as string,",
				"          country as string,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmplyeeData",
				"source(output(",
				"          deptid as string,",
				"          depname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Deptdata",
				"Deptdata, ModifyColumns1 join(deptid == department,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinEmpDataDeptData",
				"EmplyeeData derive(country = upper(country)) ~> ModifyColumns1",
				"joinEmpDataDeptData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['empDeptData'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          empid,",
				"          Empname = name,",
				"          country,",
				"          depname",
				"     ),",
				"     partitionBy('hash', 1)) ~> outputData"
			]
		}
	}
}